// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rfdiscovery.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RFDiscoveryConfig struct {
	Servers              map[string]*RFAggregatorServer `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	PollingInterval      string                         `protobuf:"bytes,2,opt,name=polling_interval,json=pollingInterval,proto3" json:"polling_interval,omitempty"`
	NameUrl              string                         `protobuf:"bytes,3,opt,name=name_url,json=nameUrl,proto3" json:"name_url,omitempty"`
	ServerUrl            string                         `protobuf:"bytes,4,opt,name=server_url,json=serverUrl,proto3" json:"server_url,omitempty"`
	UuidUrl              string                         `protobuf:"bytes,5,opt,name=uuid_url,json=uuidUrl,proto3" json:"uuid_url,omitempty"`
	IpUrl                string                         `protobuf:"bytes,6,opt,name=ip_url,json=ipUrl,proto3" json:"ip_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RFDiscoveryConfig) Reset()         { *m = RFDiscoveryConfig{} }
func (m *RFDiscoveryConfig) String() string { return proto.CompactTextString(m) }
func (*RFDiscoveryConfig) ProtoMessage()    {}
func (*RFDiscoveryConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_rfdiscovery_80b8617af27f2a98, []int{0}
}
func (m *RFDiscoveryConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFDiscoveryConfig.Unmarshal(m, b)
}
func (m *RFDiscoveryConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFDiscoveryConfig.Marshal(b, m, deterministic)
}
func (dst *RFDiscoveryConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFDiscoveryConfig.Merge(dst, src)
}
func (m *RFDiscoveryConfig) XXX_Size() int {
	return xxx_messageInfo_RFDiscoveryConfig.Size(m)
}
func (m *RFDiscoveryConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RFDiscoveryConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RFDiscoveryConfig proto.InternalMessageInfo

func (m *RFDiscoveryConfig) GetServers() map[string]*RFAggregatorServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *RFDiscoveryConfig) GetPollingInterval() string {
	if m != nil {
		return m.PollingInterval
	}
	return ""
}

func (m *RFDiscoveryConfig) GetNameUrl() string {
	if m != nil {
		return m.NameUrl
	}
	return ""
}

func (m *RFDiscoveryConfig) GetServerUrl() string {
	if m != nil {
		return m.ServerUrl
	}
	return ""
}

func (m *RFDiscoveryConfig) GetUuidUrl() string {
	if m != nil {
		return m.UuidUrl
	}
	return ""
}

func (m *RFDiscoveryConfig) GetIpUrl() string {
	if m != nil {
		return m.IpUrl
	}
	return ""
}

type RFAggregatorServer struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 int32    `protobuf:"varint,3,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFAggregatorServer) Reset()         { *m = RFAggregatorServer{} }
func (m *RFAggregatorServer) String() string { return proto.CompactTextString(m) }
func (*RFAggregatorServer) ProtoMessage()    {}
func (*RFAggregatorServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_rfdiscovery_80b8617af27f2a98, []int{1}
}
func (m *RFAggregatorServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFAggregatorServer.Unmarshal(m, b)
}
func (m *RFAggregatorServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFAggregatorServer.Marshal(b, m, deterministic)
}
func (dst *RFAggregatorServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFAggregatorServer.Merge(dst, src)
}
func (m *RFAggregatorServer) XXX_Size() int {
	return xxx_messageInfo_RFAggregatorServer.Size(m)
}
func (m *RFAggregatorServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RFAggregatorServer.DiscardUnknown(m)
}

var xxx_messageInfo_RFAggregatorServer proto.InternalMessageInfo

func (m *RFAggregatorServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RFAggregatorServer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RFAggregatorServer) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func init() {
	proto.RegisterType((*RFDiscoveryConfig)(nil), "proto.RFDiscoveryConfig")
	proto.RegisterMapType((map[string]*RFAggregatorServer)(nil), "proto.RFDiscoveryConfig.ServersEntry")
	proto.RegisterType((*RFAggregatorServer)(nil), "proto.RFAggregatorServer")
}

func init() { proto.RegisterFile("rfdiscovery.proto", fileDescriptor_rfdiscovery_80b8617af27f2a98) }

var fileDescriptor_rfdiscovery_80b8617af27f2a98 = []byte{
	// 287 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x4d, 0x4b, 0xf3, 0x40,
	0x10, 0x80, 0x49, 0xd2, 0xa4, 0xed, 0xf4, 0xe5, 0xb5, 0x1d, 0x10, 0x12, 0x41, 0x28, 0x05, 0xa1,
	0x5e, 0x22, 0xd4, 0x8b, 0x78, 0x11, 0xf1, 0x03, 0x04, 0x4f, 0x91, 0x9c, 0x4b, 0xb4, 0xdb, 0xb0,
	0xb8, 0x66, 0x97, 0xc9, 0x07, 0xe4, 0xef, 0xf9, 0xcb, 0x64, 0x67, 0x53, 0x11, 0x7a, 0xca, 0xcc,
	0x3c, 0xcf, 0x4c, 0x66, 0x16, 0x16, 0xb4, 0xdf, 0xc9, 0xfa, 0x43, 0x77, 0x82, 0xfa, 0xd4, 0x90,
	0x6e, 0x34, 0x86, 0xfc, 0x59, 0x7d, 0xfb, 0xb0, 0xc8, 0x9e, 0x1f, 0x0f, 0xf0, 0x41, 0x57, 0x7b,
	0x59, 0xe2, 0x1d, 0x8c, 0x6b, 0x41, 0x9d, 0xa0, 0x3a, 0xf6, 0x96, 0xc1, 0x7a, 0xb6, 0xb9, 0x70,
	0x5d, 0xe9, 0x91, 0x9a, 0xbe, 0x39, 0xef, 0xa9, 0x6a, 0xa8, 0xcf, 0x0e, 0x5d, 0x78, 0x09, 0x73,
	0xa3, 0x95, 0x92, 0x55, 0xb9, 0x95, 0x55, 0x23, 0xa8, 0x2b, 0x54, 0xec, 0x2f, 0xbd, 0xf5, 0x34,
	0x3b, 0x19, 0xea, 0x2f, 0x43, 0x19, 0x13, 0x98, 0x54, 0xc5, 0x97, 0xd8, 0xb6, 0xa4, 0xe2, 0x80,
	0x95, 0xb1, 0xcd, 0x73, 0x52, 0x78, 0x0e, 0xe0, 0x06, 0x32, 0x1c, 0x31, 0x9c, 0xba, 0x8a, 0xc5,
	0x09, 0x4c, 0xda, 0x56, 0xee, 0x18, 0x86, 0xae, 0xd3, 0xe6, 0x16, 0x9d, 0x42, 0x24, 0x0d, 0x83,
	0x88, 0x41, 0x28, 0x4d, 0x4e, 0xea, 0x2c, 0x87, 0x7f, 0x7f, 0xf7, 0xc5, 0x39, 0x04, 0x9f, 0xa2,
	0x8f, 0x3d, 0x76, 0x6c, 0x88, 0x57, 0x10, 0x76, 0x85, 0x6a, 0x05, 0x6f, 0x3b, 0xdb, 0x24, 0xbf,
	0x77, 0xdf, 0x97, 0x25, 0x89, 0xb2, 0x68, 0x34, 0xb9, 0x09, 0x99, 0xf3, 0x6e, 0xfd, 0x1b, 0x6f,
	0xf5, 0x0a, 0x78, 0x2c, 0x20, 0xc2, 0xc8, 0x1e, 0x32, 0x4c, 0xe7, 0x18, 0xff, 0x83, 0x2f, 0xcd,
	0xf0, 0x12, 0xbe, 0x34, 0xd6, 0x31, 0x9a, 0x1a, 0x3e, 0x3c, 0xcc, 0x38, 0x7e, 0x8f, 0xf8, 0x97,
	0xd7, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x8e, 0xdf, 0x46, 0x6e, 0xb5, 0x01, 0x00, 0x00,
}
