// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rffrequencyscaling.proto

package proto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RFCPUFreqScalingConfig struct {
	Servers              map[string]*RFCPUFreqScalingServer `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	FreqScalPolicies     map[string]*RFCPUFreqScalingPolicy `protobuf:"bytes,2,rep,name=freq_scal_policies,json=freqScalPolicies,proto3" json:"freq_scal_policies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	IpUrl                string                             `protobuf:"bytes,3,opt,name=ip_url,json=ipUrl,proto3" json:"ip_url,omitempty"`
	AggUrl               string                             `protobuf:"bytes,4,opt,name=agg_url,json=aggUrl,proto3" json:"agg_url,omitempty"`
	CheckInterval        string                             `protobuf:"bytes,5,opt,name=check_interval,json=checkInterval,proto3" json:"check_interval,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *RFCPUFreqScalingConfig) Reset()         { *m = RFCPUFreqScalingConfig{} }
func (m *RFCPUFreqScalingConfig) String() string { return proto.CompactTextString(m) }
func (*RFCPUFreqScalingConfig) ProtoMessage()    {}
func (*RFCPUFreqScalingConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_rffrequencyscaling_4b396ea492b0d4f3, []int{0}
}
func (m *RFCPUFreqScalingConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFCPUFreqScalingConfig.Unmarshal(m, b)
}
func (m *RFCPUFreqScalingConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFCPUFreqScalingConfig.Marshal(b, m, deterministic)
}
func (dst *RFCPUFreqScalingConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFCPUFreqScalingConfig.Merge(dst, src)
}
func (m *RFCPUFreqScalingConfig) XXX_Size() int {
	return xxx_messageInfo_RFCPUFreqScalingConfig.Size(m)
}
func (m *RFCPUFreqScalingConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RFCPUFreqScalingConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RFCPUFreqScalingConfig proto.InternalMessageInfo

func (m *RFCPUFreqScalingConfig) GetServers() map[string]*RFCPUFreqScalingServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *RFCPUFreqScalingConfig) GetFreqScalPolicies() map[string]*RFCPUFreqScalingPolicy {
	if m != nil {
		return m.FreqScalPolicies
	}
	return nil
}

func (m *RFCPUFreqScalingConfig) GetIpUrl() string {
	if m != nil {
		return m.IpUrl
	}
	return ""
}

func (m *RFCPUFreqScalingConfig) GetAggUrl() string {
	if m != nil {
		return m.AggUrl
	}
	return ""
}

func (m *RFCPUFreqScalingConfig) GetCheckInterval() string {
	if m != nil {
		return m.CheckInterval
	}
	return ""
}

type RFCPUFreqScalingServer struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Port                 string   `protobuf:"bytes,3,opt,name=port,proto3" json:"port,omitempty"`
	ReqTimeout           int32    `protobuf:"varint,4,opt,name=req_timeout,json=reqTimeout,proto3" json:"req_timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFCPUFreqScalingServer) Reset()         { *m = RFCPUFreqScalingServer{} }
func (m *RFCPUFreqScalingServer) String() string { return proto.CompactTextString(m) }
func (*RFCPUFreqScalingServer) ProtoMessage()    {}
func (*RFCPUFreqScalingServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_rffrequencyscaling_4b396ea492b0d4f3, []int{1}
}
func (m *RFCPUFreqScalingServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFCPUFreqScalingServer.Unmarshal(m, b)
}
func (m *RFCPUFreqScalingServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFCPUFreqScalingServer.Marshal(b, m, deterministic)
}
func (dst *RFCPUFreqScalingServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFCPUFreqScalingServer.Merge(dst, src)
}
func (m *RFCPUFreqScalingServer) XXX_Size() int {
	return xxx_messageInfo_RFCPUFreqScalingServer.Size(m)
}
func (m *RFCPUFreqScalingServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RFCPUFreqScalingServer.DiscardUnknown(m)
}

var xxx_messageInfo_RFCPUFreqScalingServer proto.InternalMessageInfo

func (m *RFCPUFreqScalingServer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RFCPUFreqScalingServer) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *RFCPUFreqScalingServer) GetPort() string {
	if m != nil {
		return m.Port
	}
	return ""
}

func (m *RFCPUFreqScalingServer) GetReqTimeout() int32 {
	if m != nil {
		return m.ReqTimeout
	}
	return 0
}

type RFCPUFreqScalingPolicy struct {
	ScalingGovernor      string   `protobuf:"bytes,1,opt,name=scaling_governor,json=scalingGovernor,proto3" json:"scaling_governor,omitempty"`
	ScalingMinFreq       int32    `protobuf:"varint,2,opt,name=scaling_min_freq,json=scalingMinFreq,proto3" json:"scaling_min_freq,omitempty"`
	ScalingMaxFreq       int32    `protobuf:"varint,3,opt,name=scaling_max_freq,json=scalingMaxFreq,proto3" json:"scaling_max_freq,omitempty"`
	NodeArch             string   `protobuf:"bytes,4,opt,name=node_arch,json=nodeArch,proto3" json:"node_arch,omitempty"`
	NodePlatform         string   `protobuf:"bytes,5,opt,name=node_platform,json=nodePlatform,proto3" json:"node_platform,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFCPUFreqScalingPolicy) Reset()         { *m = RFCPUFreqScalingPolicy{} }
func (m *RFCPUFreqScalingPolicy) String() string { return proto.CompactTextString(m) }
func (*RFCPUFreqScalingPolicy) ProtoMessage()    {}
func (*RFCPUFreqScalingPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_rffrequencyscaling_4b396ea492b0d4f3, []int{2}
}
func (m *RFCPUFreqScalingPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFCPUFreqScalingPolicy.Unmarshal(m, b)
}
func (m *RFCPUFreqScalingPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFCPUFreqScalingPolicy.Marshal(b, m, deterministic)
}
func (dst *RFCPUFreqScalingPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFCPUFreqScalingPolicy.Merge(dst, src)
}
func (m *RFCPUFreqScalingPolicy) XXX_Size() int {
	return xxx_messageInfo_RFCPUFreqScalingPolicy.Size(m)
}
func (m *RFCPUFreqScalingPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_RFCPUFreqScalingPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_RFCPUFreqScalingPolicy proto.InternalMessageInfo

func (m *RFCPUFreqScalingPolicy) GetScalingGovernor() string {
	if m != nil {
		return m.ScalingGovernor
	}
	return ""
}

func (m *RFCPUFreqScalingPolicy) GetScalingMinFreq() int32 {
	if m != nil {
		return m.ScalingMinFreq
	}
	return 0
}

func (m *RFCPUFreqScalingPolicy) GetScalingMaxFreq() int32 {
	if m != nil {
		return m.ScalingMaxFreq
	}
	return 0
}

func (m *RFCPUFreqScalingPolicy) GetNodeArch() string {
	if m != nil {
		return m.NodeArch
	}
	return ""
}

func (m *RFCPUFreqScalingPolicy) GetNodePlatform() string {
	if m != nil {
		return m.NodePlatform
	}
	return ""
}

func init() {
	proto.RegisterType((*RFCPUFreqScalingConfig)(nil), "proto.RFCPUFreqScalingConfig")
	proto.RegisterMapType((map[string]*RFCPUFreqScalingPolicy)(nil), "proto.RFCPUFreqScalingConfig.FreqScalPoliciesEntry")
	proto.RegisterMapType((map[string]*RFCPUFreqScalingServer)(nil), "proto.RFCPUFreqScalingConfig.ServersEntry")
	proto.RegisterType((*RFCPUFreqScalingServer)(nil), "proto.RFCPUFreqScalingServer")
	proto.RegisterType((*RFCPUFreqScalingPolicy)(nil), "proto.RFCPUFreqScalingPolicy")
}

func init() {
	proto.RegisterFile("rffrequencyscaling.proto", fileDescriptor_rffrequencyscaling_4b396ea492b0d4f3)
}

var fileDescriptor_rffrequencyscaling_4b396ea492b0d4f3 = []byte{
	// 430 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x92, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc7, 0x95, 0x64, 0xe9, 0xe8, 0xeb, 0x56, 0x2a, 0x4b, 0x83, 0x68, 0x08, 0x51, 0x15, 0x21,
	0x15, 0x0e, 0x3d, 0xac, 0x17, 0xc4, 0x0d, 0x0d, 0x86, 0x38, 0x20, 0x55, 0x19, 0x3b, 0x70, 0x8a,
	0xbc, 0xe0, 0xa4, 0xd6, 0x52, 0xdb, 0x79, 0xf9, 0xa1, 0xe5, 0x2f, 0x45, 0xfc, 0x37, 0xc8, 0xcf,
	0x9e, 0xd8, 0xd8, 0xe0, 0xc0, 0xc9, 0xd6, 0xc7, 0x5f, 0xbf, 0xef, 0xfb, 0x05, 0x09, 0x16, 0x05,
	0x8a, 0xba, 0x13, 0x2a, 0x1f, 0x9a, 0x9c, 0x57, 0x52, 0x95, 0x2b, 0x83, 0xba, 0xd5, 0x2c, 0xa6,
	0x63, 0xf1, 0x23, 0x82, 0x27, 0xe9, 0xd9, 0xe9, 0xe6, 0xe2, 0x0c, 0x45, 0x7d, 0xee, 0x14, 0xa7,
	0x5a, 0x15, 0xb2, 0x64, 0x1f, 0x60, 0xbf, 0x11, 0xd8, 0x0b, 0x6c, 0x92, 0x60, 0x1e, 0x2d, 0x27,
	0x27, 0x6f, 0xdc, 0xd7, 0xd5, 0xc3, 0xfa, 0xd5, 0xb9, 0x13, 0x7f, 0x54, 0x2d, 0x0e, 0xe9, 0xcd,
	0x57, 0xc6, 0x81, 0xd9, 0x0c, 0x32, 0xeb, 0x9e, 0x19, 0x5d, 0xc9, 0x5c, 0x8a, 0x26, 0x09, 0x29,
	0xe0, 0xfa, 0xdf, 0x01, 0x6f, 0xc8, 0xc6, 0xff, 0x72, 0x91, 0x67, 0xc5, 0x1f, 0x98, 0x1d, 0xc1,
	0x48, 0x9a, 0xac, 0xc3, 0x2a, 0x89, 0xe6, 0xc1, 0x72, 0x9c, 0xc6, 0xd2, 0x5c, 0x60, 0xc5, 0x9e,
	0xc2, 0x3e, 0x2f, 0x4b, 0xe2, 0x7b, 0xc4, 0x47, 0xbc, 0x2c, 0xed, 0xc3, 0x2b, 0x98, 0xe6, 0x5b,
	0x91, 0x5f, 0x65, 0x52, 0xb5, 0x02, 0x7b, 0x5e, 0x25, 0x31, 0xbd, 0x1f, 0x12, 0xfd, 0xec, 0xe1,
	0xf1, 0x37, 0x38, 0xb8, 0x5d, 0x12, 0x9b, 0x41, 0x74, 0x25, 0x86, 0x24, 0x20, 0xad, 0xbd, 0xb2,
	0x35, 0xc4, 0x3d, 0xaf, 0x3a, 0x91, 0x84, 0xf3, 0x60, 0x39, 0x39, 0x79, 0xfe, 0x97, 0x72, 0x5c,
	0x94, 0xd4, 0x69, 0xdf, 0x85, 0x6f, 0x83, 0xe3, 0x4b, 0x38, 0x7a, 0xb0, 0xb8, 0xff, 0xf7, 0xa0,
	0x30, 0xc3, 0x2d, 0x8f, 0x45, 0x7d, 0x7f, 0xb0, 0x2e, 0x11, 0xc6, 0x60, 0x4f, 0xf1, 0x9d, 0xf0,
	0x2e, 0x74, 0x67, 0x53, 0x08, 0xa5, 0x21, 0x8f, 0x71, 0x1a, 0x4a, 0x63, 0x35, 0x46, 0x63, 0xeb,
	0x3b, 0x4a, 0x77, 0xf6, 0x02, 0x26, 0x76, 0x92, 0xad, 0xdc, 0x09, 0xdd, 0xb5, 0xd4, 0xd4, 0x38,
	0x05, 0x14, 0xf5, 0x57, 0x47, 0x16, 0x3f, 0x83, 0xfb, 0x9e, 0x2e, 0x31, 0xf6, 0x1a, 0x66, 0x7e,
	0xff, 0xb2, 0x52, 0xf7, 0x02, 0x95, 0x46, 0xef, 0xff, 0xd8, 0xf3, 0x4f, 0x1e, 0xb3, 0xe5, 0x6f,
	0xe9, 0x4e, 0xaa, 0xcc, 0x8e, 0x9b, 0x12, 0x8b, 0xd3, 0xa9, 0xe7, 0x5f, 0xa4, 0xb2, 0x0e, 0x77,
	0x94, 0xfc, 0xda, 0x29, 0xa3, 0xbb, 0x4a, 0x7e, 0x4d, 0xca, 0x67, 0x30, 0x56, 0xfa, 0xbb, 0xc8,
	0x38, 0xe6, 0x5b, 0xbf, 0x0d, 0x8f, 0x2c, 0x78, 0x8f, 0xf9, 0x96, 0xbd, 0x84, 0x43, 0x7a, 0x34,
	0x15, 0x6f, 0x0b, 0x8d, 0x3b, 0xbf, 0x0e, 0x07, 0x16, 0x6e, 0x3c, 0xbb, 0x1c, 0x51, 0xdf, 0xd7,
	0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x3f, 0x31, 0xc3, 0x13, 0x52, 0x03, 0x00, 0x00,
}
